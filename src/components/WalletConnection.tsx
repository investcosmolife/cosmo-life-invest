
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { useTelegramWallet } from '@/hooks/useTelegramWallet';
import { Wallet, AlertCircle } from 'lucide-react';

interface WalletConnectionProps {
  onConnect: () => void;
}

export const WalletConnection = ({ onConnect }: WalletConnectionProps) => {
  const { wallet, isLoading, connectWallet } = useTelegramWallet();

  const handleConnect = async () => {
    const success = await connectWallet();
    if (success) {
      onConnect();
    }
  };

  if (isLoading) {
    return (
      <Card className="text-center">
        <CardContent className="p-6">
          <div className="animate-pulse">
            <Wallet className="h-12 w-12 mx-auto mb-4 text-blue-500" />
            <p>–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫–æ—à–µ–ª—å–∫–∞...</p>
          </div>
        </CardContent>
      </Card>
    );
  }

  if (wallet.isConnected) {
    return (
      <Card className="bg-green-50 border-green-200">
        <CardHeader>
          <CardTitle className="flex items-center gap-2 text-green-800">
            <Wallet className="h-5 w-5" />
            –ö–æ—à–µ–ª–µ–∫ –ø–æ–¥–∫–ª—é—á–µ–Ω
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="space-y-2">
            <p className="text-sm text-green-700">
              –ê–¥—Ä–µ—Å: {wallet.address?.slice(0, 8)}...{wallet.address?.slice(-8)}
            </p>
            {wallet.balance && (
              <p className="text-sm text-green-700">
                –ë–∞–ª–∞–Ω—Å: {wallet.balance.toFixed(2)} TON
              </p>
            )}
            <Button onClick={onConnect} className="w-full bg-green-600 hover:bg-green-700">
              –í–æ–π—Ç–∏ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç
            </Button>
          </div>
        </CardContent>
      </Card>
    );
  }

  return (
    <Card className="bg-yellow-50 border-yellow-200">
      <CardHeader>
        <CardTitle className="flex items-center gap-2 text-yellow-800">
          <AlertCircle className="h-5 w-5" />
          –ö–æ—à–µ–ª–µ–∫ –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω
        </CardTitle>
      </CardHeader>
      <CardContent>
        <div className="space-y-4">
          <p className="text-sm text-yellow-700">
            –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –ª–∏—á–Ω–æ–º—É –∫–∞–±–∏–Ω–µ—Ç—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å –∫–æ—à–µ–ª–µ–∫ TON –≤ Telegram
          </p>
          <Button onClick={handleConnect} className="w-full bg-blue-600 hover:bg-blue-700">
            <Wallet className="h-4 w-4 mr-2" />
            –ü–æ–¥–∫–ª—é—á–∏—Ç—å –∫–æ—à–µ–ª–µ–∫
          </Button>
          <div className="text-xs text-gray-600 space-y-1">
            <p>üí° –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:</p>
            <p>1. –ù–∞–∂–º–∏—Ç–µ "–ü–æ–¥–∫–ª—é—á–∏—Ç—å –∫–æ—à–µ–ª–µ–∫"</p>
            <p>2. –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º Telegram</p>
            <p>3. –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ</p>
          </div>
        </div>
      </CardContent>
    </Card>
  );
};
